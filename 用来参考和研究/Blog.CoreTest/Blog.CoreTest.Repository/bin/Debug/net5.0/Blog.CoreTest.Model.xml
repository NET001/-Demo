<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blog.CoreTest.Model</name>
    </assembly>
    <members>
        <member name="T:Blog.CoreTest.Model.MessageModel`1">
            <summary>
            通用返回信息类
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.MessageModel`1.status">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.MessageModel`1.success">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.MessageModel`1.msg">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.MessageModel`1.response">
            <summary>
            返回数据集合
            </summary>
        </member>
        <member name="M:Blog.CoreTest.Model.MessageModel`1.Success(System.String)">
            <summary>
            返回成功
            </summary>
            <param name="msg">消息</param>
            <returns></returns>
        </member>
        <member name="M:Blog.CoreTest.Model.MessageModel`1.Success(System.String,`0)">
            <summary>
            返回成功
            </summary>
            <param name="msg">消息</param>
            <param name="response">数据</param>
            <returns></returns>
        </member>
        <member name="M:Blog.CoreTest.Model.MessageModel`1.Fail(System.String)">
            <summary>
            返回失败
            </summary>
            <param name="msg">消息</param>
            <returns></returns>
        </member>
        <member name="M:Blog.CoreTest.Model.MessageModel`1.Fail(System.String,`0)">
            <summary>
            返回失败
            </summary>
            <param name="msg">消息</param>
            <param name="response">数据</param>
            <returns></returns>
        </member>
        <member name="M:Blog.CoreTest.Model.MessageModel`1.Message(System.Boolean,System.String,`0)">
            <summary>
            返回消息
            </summary>
            <param name="success">失败/成功</param>
            <param name="msg">消息</param>
            <param name="response">数据</param>
            <returns></returns>
        </member>
        <member name="P:Blog.CoreTest.Model.MessageModel.status">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.MessageModel.success">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.MessageModel.msg">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.MessageModel.response">
            <summary>
            返回数据集合
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.PageModel`1">
            <summary>
            通信分页类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Blog.CoreTest.Model.PageModel`1.page">
            <summary>
            当前标
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.PageModel`1.pageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.PageModel`1.dataCount">
            <summary>
            数据总数
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.PageModel`1.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.PageModel`1.data">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Advertisement.ImgUrl">
            <summary>
            广告图片
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Advertisement.Title">
            <summary>
            广告标题
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Advertisement.Url">
            <summary>
            广告链接
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Advertisement.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Advertisement.Createdate">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.BlogArticle">
            <summary>
            博客文章
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.BlogArticle.bID">
            <summary>
            主键
            </summary>
            这里之所以没用RootEntity，是想保持和之前的数据库一致，主键是bID，不是Id
        </member>
        <member name="P:Blog.CoreTest.Model.Models.BlogArticle.bsubmitter">
            <summary>
            创建人
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.BlogArticle.btitle">
            <summary>
            标题blog
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.BlogArticle.bcategory">
            <summary>
            类别
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.BlogArticle.bcontent">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.BlogArticle.btraffic">
            <summary>
            访问量
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.BlogArticle.bcommentNum">
            <summary>
            评论数量
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.BlogArticle.bUpdateTime">
            <summary> 
            修改时间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.BlogArticle.bCreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.BlogArticle.bRemark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.BlogArticle.IsDeleted">
            <summary>
            逻辑删除
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.Modules">
            <summary>
            接口API地址信息表
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.IsDeleted">
             <summary>
            获取或设置是否禁用，逻辑上的删除，非物理删除
             </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.LinkUrl">
            <summary>
            菜单链接地址
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.Area">
            <summary>
            区域名称
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.Controller">
            <summary>
            控制器名称
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.Action">
            <summary>
            Action名称
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.Code">
            <summary>
            菜单编号
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.OrderSort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.Description">
            <summary>
            /描述
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.IsMenu">
            <summary>
            是否是右侧菜单
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.Enabled">
            <summary>
            是否激活
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.CreateId">
            <summary>
            创建ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.CreateBy">
            <summary>
            创建者
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.ModifyId">
            <summary>
            修改ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.ModifyBy">
            <summary>
            修改者
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Modules.ModifyTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.Permission">
            <summary>
            路由菜单表
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.Code">
            <summary>
            菜单执行Action名
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.Name">
            <summary>
            菜单显示名（如用户页、编辑(按钮)、删除(按钮)）
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.IsButton">
            <summary>
            是否是按钮
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.IsHide">
            <summary>
            是否是隐藏菜单
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.IskeepAlive">
            <summary>
            是否keepAlive
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.Func">
            <summary>
            按钮事件
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.OrderSort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.Icon">
            <summary>
            菜单图标
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.Description">
            <summary>
            菜单描述    
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.Enabled">
            <summary>
            激活状态
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.CreateId">
            <summary>
            创建ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.CreateBy">
            <summary>
            创建者
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.ModifyId">
            <summary>
            修改ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.ModifyBy">
            <summary>
            修改者
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.ModifyTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Permission.IsDeleted">
             <summary>
            获取或设置是否禁用，逻辑上的删除，非物理删除
             </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.Role">
            <summary>
            角色表
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Role.IsDeleted">
             <summary>
            获取或设置是否禁用，逻辑上的删除，非物理删除
             </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Role.Name">
            <summary>
            角色名
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Role.Description">
             <summary>
            描述
             </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Role.OrderSort">
             <summary>
            排序
             </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Role.Enabled">
            <summary>
            是否激活
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Role.CreateId">
            <summary>
            创建ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Role.CreateBy">
            <summary>
            创建者
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Role.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Role.ModifyId">
            <summary>
            修改ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Role.ModifyBy">
            <summary>
            修改者
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.Role.ModifyTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.RoleModulePermission">
            <summary>
            按钮跟权限关联表
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RoleModulePermission.IsDeleted">
             <summary>
            获取或设置是否禁用，逻辑上的删除，非物理删除
             </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RoleModulePermission.CreateId">
            <summary>
            创建ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RoleModulePermission.CreateBy">
            <summary>
            创建者
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RoleModulePermission.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RoleModulePermission.ModifyId">
            <summary>
            修改ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RoleModulePermission.ModifyBy">
            <summary>
            修改者
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RoleModulePermission.ModifyTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.RootTKey.ModulesRoot`1">
            <summary>
            接口API地址信息表 
            父类
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RootTKey.ModulesRoot`1.ParentId">
            <summary>
            父ID
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.RootTKey.PermissionRoot`1">
            <summary>
            路由菜单表
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RootTKey.PermissionRoot`1.Pid">
            <summary>
            上一级菜单（0表示上一级无菜单）
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RootTKey.PermissionRoot`1.Mid">
            <summary>
            接口api
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.RootTKey.RoleModulePermissionRoot`1">
            <summary>
            按钮跟权限关联表
            父类
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RootTKey.RoleModulePermissionRoot`1.RoleId">
            <summary>
            角色ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RootTKey.RoleModulePermissionRoot`1.ModuleId">
            <summary>
            菜单ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RootTKey.RoleModulePermissionRoot`1.PermissionId">
            <summary>
            api ID
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.RootTKey.RootEntityTkey`1">
            <summary>
            所有实体的基类
            </summary>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RootTKey.RootEntityTkey`1.Id">
            <summary>
            指定主键不为空，而且为主键
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.RootTKey.sysUserInfoRoot`1">
            <summary>
            用户信息表
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RootTKey.sysUserInfoRoot`1.uID">
            <summary>
            uID
            泛型主键Tkey
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.RootTKey.TopicDetailRoot`1">
            <summary>
            Tibug 博文
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.RootTKey.UserRoleRoot`1">
            <summary>
            用户跟角色关联表
            父类
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RootTKey.UserRoleRoot`1.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.RootTKey.UserRoleRoot`1.RoleId">
            <summary>
            角色ID
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.sysUserInfo">
            <summary>
            用户信息表
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.sysUserInfo.uLoginName">
            <summary>
            登录账号
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.sysUserInfo.uLoginPWD">
            <summary>
            登录密码
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.sysUserInfo.uRealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.sysUserInfo.uStatus">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.sysUserInfo.uRemark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.sysUserInfo.uCreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.sysUserInfo.uUpdateTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.sysUserInfo.uLastErrTime">
             <summary>
            最后登录时间 
             </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.sysUserInfo.uErrorCount">
             <summary>
            错误次数 
             </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.sysUserInfo.name">
            <summary>
            登录账号
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.TasksQz">
            <summary>
            任务计划表
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.Name">
            <summary>
            任务名称
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.JobGroup">
            <summary>
            任务分组
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.Cron">
            <summary>
            任务运行时间表达式
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.AssemblyName">
            <summary>
            任务所在DLL对应的程序集名称
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.ClassName">
            <summary>
            任务所在类
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.Remark">
            <summary>
            任务描述
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.RunTimes">
            <summary>
            执行次数
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.BeginTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.TriggerType">
            <summary>
            触发器类型（0、simple 1、cron）
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.IntervalSecond">
            <summary>
            执行间隔时间, 秒为单位
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.CycleRunTimes">
            <summary>
            循环执行次数
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.IsStart">
            <summary>
            是否启动
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.JobParams">
            <summary>
            执行传参
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.TasksQz.Triggers">
            <summary>
            任务内存中的状态
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.Topic">
            <summary>
            Tibug 类别
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.TopicDetail">
            <summary>
            Tibug 博文
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.Models.UserRole">
            <summary>
            用户跟角色关联表
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.UserRole.IsDeleted">
             <summary>
            获取或设置是否禁用，逻辑上的删除，非物理删除
             </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.UserRole.CreateId">
            <summary>
            创建ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.UserRole.CreateBy">
            <summary>
            创建者
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.UserRole.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.UserRole.ModifyId">
            <summary>
            修改ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.UserRole.ModifyBy">
            <summary>
            修改者
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Models.UserRole.ModifyTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="M:Blog.CoreTest.Model.Seed.DBSeed.SeedAsync(Blog.CoreTest.Model.Seed.MyContext,System.String)">
            <summary>
            异步添加种子数据
            </summary>
            <param name="myContext"></param>
            <param name="WebRootPath"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.CoreTest.Model.Seed.MyContext.GetMainConnectionDb">
            <summary>
            连接字符串获得主表配置
            Blog.Core
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Seed.MyContext.ConnectionString">
            <summary>
            连接字符串 
            Blog.Core
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Seed.MyContext.DbType">
            <summary>
            数据库类型 
            Blog.Core 
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.Seed.MyContext.Db">
            <summary>
            数据连接对象 
            Blog.Core 
            </summary>
        </member>
        <member name="M:Blog.CoreTest.Model.Seed.MyContext.#ctor(SqlSugar.ISqlSugarClient)">
            <summary>
            功能描述:构造函数ISqlSugarClient已经在SqlsugarSetup中进行了初始化
            作　　者:Blog.Core
            </summary>
        </member>
        <member name="M:Blog.CoreTest.Model.Seed.MyContext.GetEntityDB``1">
            <summary>
            功能描述:获取数据库处理对象
            作　　者:Blog.Core
            </summary>
            <returns>返回值</returns>
        </member>
        <member name="M:Blog.CoreTest.Model.Seed.MyContext.GetEntityDB``1(SqlSugar.SqlSugarClient)">
            <summary>
            功能描述:获取数据库处理对象
            作　　者:Blog.Core
            </summary>
            <param name="db">db</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Blog.CoreTest.Model.Seed.MyContext.CreateTableByEntity``1(System.Boolean,``0[])">
            <summary>
            功能描述:根据实体类生成数据库表
            作　　者:Blog.Core
            </summary>
            <param name="blnBackupTable">是否备份表</param>
            <param name="lstEntitys">指定的实体</param>
        </member>
        <member name="M:Blog.CoreTest.Model.Seed.MyContext.CreateTableByEntity(System.Boolean,System.Type[])">
            <summary>
            功能描述:根据实体类生成数据库表
            作　　者:Blog.Core
            </summary>
            <param name="blnBackupTable">是否备份表</param>
            <param name="lstEntitys">指定的实体</param>
        </member>
        <member name="M:Blog.CoreTest.Model.Seed.MyContext.Init(System.String,SqlSugar.DbType)">
            <summary>
            功能描述:设置初始化参数
            作　　者:Blog.Core
            </summary>
            <param name="strConnectionString">连接字符串</param>
            <param name="enmDbType">数据库类型</param>
        </member>
        <member name="M:Blog.CoreTest.Model.Seed.MyContext.GetConnectionConfig(System.Boolean,System.Boolean)">
            <summary>
            功能描述:创建一个链接配置
            作　　者:Blog.Core
            </summary>
            <param name="blnIsAutoCloseConnection">是否自动关闭连接</param>
            <param name="blnIsShardSameThread">是否夸类事务</param>
            <returns>ConnectionConfig</returns>
        </member>
        <member name="M:Blog.CoreTest.Model.Seed.MyContext.GetCustomDB(SqlSugar.ConnectionConfig)">
            <summary>
            功能描述:获取一个自定义的DB
            作　　者:Blog.Core
            </summary>
            <param name="config">config</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Blog.CoreTest.Model.Seed.MyContext.GetCustomEntityDB``1(SqlSugar.SqlSugarClient)">
            <summary>
            功能描述:获取一个自定义的数据库处理对象
            作　　者:Blog.Core
            </summary>
            <param name="sugarClient">sugarClient</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Blog.CoreTest.Model.Seed.MyContext.GetCustomEntityDB``1(SqlSugar.ConnectionConfig)">
            <summary>
            功能描述:获取一个自定义的数据库处理对象
            作　　者:Blog.Core
            </summary>
            <param name="config">config</param>
            <returns>返回值</returns>
        </member>
        <member name="T:Blog.CoreTest.Model.ViewModels.BlogViewModels">
            <summary>
            博客信息展示类
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.bID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.bsubmitter">
            <summary>创建人
            
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.btitle">
            <summary>博客标题
            
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.digest">
            <summary>摘要
            
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.previous">
            <summary>
            上一篇
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.previousID">
            <summary>
            上一篇id
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.next">
            <summary>
            下一篇
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.nextID">
            <summary>
            下一篇id
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.bcategory">
            <summary>类别
            
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.bcontent">
            <summary>内容
            
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.btraffic">
            <summary>
            访问量
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.bcommentNum">
            <summary>
            评论数量
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.bUpdateTime">
            <summary> 修改时间
            
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.bCreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.BlogViewModels.bRemark">
            <summary>备注
            
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.QuartzReflectionViewModel.nameSpace">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.QuartzReflectionViewModel.nameClass">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.QuartzReflectionViewModel.remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.ServerViewModel.EnvironmentName">
            <summary>
            环境变量
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.ServerViewModel.OSArchitecture">
            <summary>
            系统架构
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.ServerViewModel.ContentRootPath">
            <summary>
            ContentRootPath
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.ServerViewModel.WebRootPath">
            <summary>
            WebRootPath
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.ServerViewModel.FrameworkDescription">
            <summary>
            .NET Core版本
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.ServerViewModel.MemoryFootprint">
            <summary>
            内存占用
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.ServerViewModel.WorkingTime">
            <summary>
            启动时间
            </summary>
        </member>
        <member name="T:Blog.CoreTest.Model.ViewModels.TaskInfoDto">
            <summary>
            调度任务触发器信息实体
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.TaskInfoDto.jobId">
            <summary>
            任务ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.TaskInfoDto.jobName">
            <summary>
            任务名称
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.TaskInfoDto.jobGroup">
            <summary>
            任务分组
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.TaskInfoDto.triggerId">
            <summary>
            触发器ID
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.TaskInfoDto.triggerName">
            <summary>
            触发器名称
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.TaskInfoDto.triggerGroup">
            <summary>
            触发器分组
            </summary>
        </member>
        <member name="P:Blog.CoreTest.Model.ViewModels.TaskInfoDto.triggerStatus">
            <summary>
            触发器状态
            </summary>
        </member>
    </members>
</doc>
